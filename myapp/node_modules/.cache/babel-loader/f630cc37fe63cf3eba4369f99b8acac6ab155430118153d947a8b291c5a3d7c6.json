{"ast":null,"code":"import{useEffect,useState}from'react';import'./App.css';import SingleCard from'./components/SingleCard';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const cardImages=[{\"src\":\"/images/bluefire.png\",matched:false},{\"src\":\"/images/ghost.png\",matched:false},{\"src\":\"/images/guitar.png\",matched:false},{\"src\":\"/images/home.png\",matched:false},{\"src\":\"/images/letter.png\",matched:false},{\"src\":\"/images/rockstar.png\",matched:false}];function App(){const[cards,setCards]=useState([]);const[turns,setTurns]=useState(0);const[choiceOne,setChoiceOne]=useState(null);const[choiceTwo,setChoiceTwo]=useState(null);const[disabled,setDisabled]=useState(false);// shuffle card\nconst shuffleCards=()=>{const shuffleCards=[...cardImages,...cardImages].sort(()=>Math.random()-0.5).map(card=>({...card,id:Math.random()}));setChoiceOne(null);setChoiceTwo(null);setCards(shuffleCards);setTurns(0);};// handle choice\nconst handleChoice=card=>{choiceOne?setChoiceTwo(card):setChoiceOne(card);};// compare two selected cards\nuseEffect(()=>{if(choiceOne&&choiceTwo){setDisabled(true);if(choiceOne.src===choiceTwo.src){setCards(prevCard=>{return prevCard.map(card=>{if(card.src===choiceOne.src){return{...card,matched:true};}else{return card;}});});resetTurn();}else{setTimeout(()=>resetTurn(),1000);}}},[choiceOne,choiceTwo]);// turns count \nuseEffect(()=>{shuffleCards();},[]);// reset choice & increase turn\nconst resetTurn=()=>{setChoiceOne(null);setChoiceTwo(null);setTurns(prevTurns=>prevTurns+1);setDisabled(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Magic Match\"}),/*#__PURE__*/_jsx(\"button\",{onClick:shuffleCards,children:\"New Game\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"T\",children:[\"Turns: \",turns]}),/*#__PURE__*/_jsx(\"div\",{className:\"card-grid\",children:cards.map(card=>/*#__PURE__*/_jsx(SingleCard,{card:card,handleChoice:handleChoice,flipped:card===choiceOne||card===choiceTwo||card.matched,disabled:disabled},card.id))})]});}export default App;","map":{"version":3,"names":["useEffect","useState","SingleCard","jsx","_jsx","jsxs","_jsxs","cardImages","matched","App","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCards","sort","Math","random","map","card","id","handleChoice","src","prevCard","resetTurn","setTimeout","prevTurns","className","children","onClick","flipped"],"sources":["D:/ReactGame/myapp/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\n\nconst cardImages = [\n  {\"src\":\"/images/bluefire.png\", matched: false},\n  {\"src\":\"/images/ghost.png\", matched: false},\n  {\"src\":\"/images/guitar.png\", matched: false},\n  {\"src\":\"/images/home.png\", matched: false},\n  {\"src\":\"/images/letter.png\", matched: false},\n  {\"src\":\"/images/rockstar.png\", matched: false}\n]\n\nfunction App() {\n\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false);\n\n  // shuffle card\n\n  const shuffleCards = ()=>{\n    const shuffleCards = [...cardImages, ...cardImages]\n    .sort(()=> Math.random() - 0.5)\n    .map((card)=>({...card,id: Math.random() }))\n\n    setChoiceOne(null)\n    setChoiceTwo(null)\n    setCards(shuffleCards)\n    setTurns(0)\n  }\n\n // handle choice\n\n const handleChoice = (card) =>{\n     choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n }\n\n // compare two selected cards\n useEffect(()=>{\n   if(choiceOne && choiceTwo)\n   {\n    setDisabled(true);\n    if(choiceOne.src === choiceTwo.src)\n    {\n      setCards(prevCard =>{\n        return prevCard.map(card =>{\n          if(card.src === choiceOne.src)\n          {\n            return {...card, matched: true}\n          }else{\n            return card\n          }\n        })\n      })\n      resetTurn()\n    }else{\n      setTimeout(() => resetTurn(), 1000)\n    }\n   }\n },[choiceOne,choiceTwo])\n\n // turns count \n\n useEffect(() =>{\n  shuffleCards()\n },[])\n\n // reset choice & increase turn\n\n const resetTurn = () =>{\n  setChoiceOne(null);\n  setChoiceTwo(null);\n  setTurns(prevTurns => prevTurns + 1)\n  setDisabled(false)\n }\n\n  return (\n    <div className=\"App\">\n     <h1>Magic Match</h1>\n     <button onClick={shuffleCards}>New Game</button>\n     <p className='T'>Turns: {turns}</p>\n     <div className='card-grid'>\n       {cards.map(card => (\n        <SingleCard \n        key={card.id} \n        card={card}\n        handleChoice={handleChoice}\n        flipped = {card === choiceOne || card === choiceTwo || card.matched}\n        disabled = {disabled}\n        />\n       ))}\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}