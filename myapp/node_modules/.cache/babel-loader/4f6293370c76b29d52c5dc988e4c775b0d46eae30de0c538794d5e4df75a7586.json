{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactGame\\\\myapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/images/bluefire.png\",\n  matched: false\n}, {\n  \"src\": \"/images/ghost.png\",\n  matched: false\n}, {\n  \"src\": \"/images/guitar.png\",\n  matched: false\n}, {\n  \"src\": \"/images/home.png\",\n  matched: false\n}, {\n  \"src\": \"/images/letter.png\",\n  matched: false\n}, {\n  \"src\": \"/images/rockstar.png\",\n  matched: false\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n  const [disabled, setDisabled] = useState(false);\n\n  // shuffle card\n\n  const shuffleCards = () => {\n    const shuffleCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffleCards);\n    setTurns(0);\n  };\n\n  // handle choice\n\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // compare two selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        setCards(prevCard => {\n          return prevCard.map(card => {\n            if (card.src === choiceOne.src) {\n              return {\n                ...card,\n                matched: true\n              };\n            } else {\n              return card;\n            }\n          });\n        });\n        resetTurn();\n      } else {\n        setTimeout(() => resetTurn(), 1000);\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n  console.log(cards);\n\n  // reset choice & increase turn\n\n  const resetTurn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice,\n        flipped: card === choiceOne || card === choiceTwo || card.matched\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WWe0fUXumRKyACXDD8rBflBzdbo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SingleCard","jsxDEV","_jsxDEV","cardImages","matched","App","_s","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","disabled","setDisabled","shuffleCards","sort","Math","random","map","card","id","handleChoice","src","prevCard","resetTurn","setTimeout","console","log","prevTurns","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","flipped","_c","$RefreshReg$"],"sources":["D:/ReactGame/myapp/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\n\nconst cardImages = [\n  {\"src\":\"/images/bluefire.png\", matched: false},\n  {\"src\":\"/images/ghost.png\", matched: false},\n  {\"src\":\"/images/guitar.png\", matched: false},\n  {\"src\":\"/images/home.png\", matched: false},\n  {\"src\":\"/images/letter.png\", matched: false},\n  {\"src\":\"/images/rockstar.png\", matched: false}\n]\n\nfunction App() {\n\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n  const [disabled, setDisabled] = useState(false)\n\n  // shuffle card\n\n  const shuffleCards = ()=>{\n    const shuffleCards = [...cardImages, ...cardImages]\n    .sort(()=> Math.random() - 0.5)\n    .map((card)=>({...card,id: Math.random() }))\n\n    setCards(shuffleCards)\n    setTurns(0)\n  }\n\n // handle choice\n\n const handleChoice = (card) =>{\n     choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n }\n\n // compare two selected cards\n useEffect(()=>{\n   if(choiceOne && choiceTwo)\n   {\n    if(choiceOne.src === choiceTwo.src)\n    {\n      setCards(prevCard =>{\n        return prevCard.map(card =>{\n          if(card.src === choiceOne.src)\n          {\n            return {...card, matched: true}\n          }else{\n            return card\n          }\n        })\n      })\n      resetTurn()\n    }else{\n      setTimeout(() => resetTurn(), 1000)\n    }\n   }\n },[choiceOne,choiceTwo])\n\n console.log(cards);\n\n // reset choice & increase turn\n\n const resetTurn = () =>{\n  setChoiceOne(null);\n  setChoiceTwo(null);\n  setTurns(prevTurns => prevTurns + 1)\n }\n\n  return (\n    <div className=\"App\">\n     <h1>Magic Match</h1>\n     <button onClick={shuffleCards}>New Game</button>\n     <div className='card-grid'>\n       {cards.map(card => (\n        <SingleCard \n        key={card.id} \n        card={card}\n        handleChoice={handleChoice}\n        flipped = {card === choiceOne || card === choiceTwo || card.matched}\n        />\n       ))}\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}