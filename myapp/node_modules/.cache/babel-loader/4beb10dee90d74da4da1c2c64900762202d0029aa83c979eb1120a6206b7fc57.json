{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactGame\\\\myapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardImages = [{\n  \"src\": \"/images/bluefire.png\"\n}, {\n  \"src\": \"/images/ghost.png\"\n}, {\n  \"src\": \"/images/guitar.png\"\n}, {\n  \"src\": \"/images/home.png\"\n}, {\n  \"src\": \"/images/letter.png\"\n}, {\n  \"src\": \"/images/rockstar.png\"\n}];\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [turns, setTurns] = useState(0);\n  const [choiceOne, setChoiceOne] = useState(null);\n  const [choiceTwo, setChoiceTwo] = useState(null);\n\n  // shuffle card\n\n  const shuffleCards = () => {\n    const shuffleCards = [...cardImages, ...cardImages].sort(() => Math.random() - 0.5).map(card => ({\n      ...card,\n      id: Math.random()\n    }));\n    setCards(shuffleCards);\n    setTurns(0);\n  };\n\n  // handle choice\n\n  const handleChoice = card => {\n    choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n  };\n\n  // compare two selected cards\n  useEffect(() => {\n    if (choiceOne && choiceTwo) {\n      if (choiceOne.src === choiceTwo.src) {\n        console.log(\"those cards Match\");\n      } else {\n        console.log(\"those cards don't match\");\n      }\n    }\n  }, [choiceOne, choiceTwo]);\n\n  // reset choice & increase turn\n\n  const restturn = () => {\n    setChoiceOne(null);\n    setChoiceTwo(null);\n    setTurns(prevTurns => prevTurns + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Magic Match\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: shuffleCards,\n      children: \"New Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: cards.map(card => /*#__PURE__*/_jsxDEV(SingleCard, {\n        card: card,\n        handleChoice: handleChoice\n      }, card.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/JnteANCPxCZNpFpO1ZAWIjzFcc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","SingleCard","jsxDEV","_jsxDEV","cardImages","App","_s","cards","setCards","turns","setTurns","choiceOne","setChoiceOne","choiceTwo","setChoiceTwo","shuffleCards","sort","Math","random","map","card","id","handleChoice","src","console","log","restturn","prevTurns","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/ReactGame/myapp/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport SingleCard from './components/SingleCard';\n\n\nconst cardImages = [\n  {\"src\":\"/images/bluefire.png\"},\n  {\"src\":\"/images/ghost.png\"},\n  {\"src\":\"/images/guitar.png\"},\n  {\"src\":\"/images/home.png\"},\n  {\"src\":\"/images/letter.png\"},\n  {\"src\":\"/images/rockstar.png\"}\n]\n\nfunction App() {\n\n  const [cards, setCards] = useState([])\n  const [turns, setTurns] = useState(0)\n  const [choiceOne, setChoiceOne] = useState(null)\n  const [choiceTwo, setChoiceTwo] = useState(null)\n\n  // shuffle card\n\n  const shuffleCards = ()=>{\n    const shuffleCards = [...cardImages, ...cardImages]\n    .sort(()=> Math.random() - 0.5)\n    .map((card)=>({...card,id: Math.random() }))\n\n    setCards(shuffleCards)\n    setTurns(0)\n  }\n\n // handle choice\n\n const handleChoice = (card) =>{\n     choiceOne ? setChoiceTwo(card) : setChoiceOne(card);\n }\n\n // compare two selected cards\n useEffect(()=>{\n   if(choiceOne && choiceTwo)\n   {\n    if(choiceOne.src === choiceTwo.src)\n    {\n      console.log(\"those cards Match\")\n    \n    }else{\n      console.log(\"those cards don't match\")\n    }\n   }\n },[choiceOne,choiceTwo])\n\n // reset choice & increase turn\n\n const restturn = () =>{\n  setChoiceOne(null);\n  setChoiceTwo(null);\n  setTurns(prevTurns => prevTurns + 1)\n }\n\n  return (\n    <div className=\"App\">\n     <h1>Magic Match</h1>\n     <button onClick={shuffleCards}>New Game</button>\n     <div className='card-grid'>\n       {cards.map(card => (\n        <SingleCard \n        key={card.id} \n        card={card}\n        handleChoice={handleChoice}\n        />\n       ))}\n     </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}